"0","## Bin the data by distribution"
"0","bin_df <- function(df, bin_val, num_bins = 5){"
"0","  df %>% "
"0","    mutate(class = cut(df[,bin_val],"
"0","                       breaks = c(quantile(df[,bin_val], probs = seq(0, 1, by = 1 / num_bins))), "
"0","                       labels = FALSE, include.lowest = TRUE),"
"0","           bins = cut(df[,bin_val],"
"0","                      breaks = c(quantile(df[,bin_val], probs = seq(0, 1, by = 1 / num_bins))), "
"0","                      include.lowest = TRUE)) -> df"
"0","  df$class <- as.factor(df$class)"
"0","  "
"0","  ## Assign average class median house value"
"0","  aggregate(Median_House_Value ~ class, FUN = mean, data = df) %>%"
"0","    merge(x = df, y = ., by = ""class"") -> average_binned"
"0","    names(average_binned)[names(average_binned) == glue('{bin_val}.y')] <- ""Class_Avg_Value"""
"0","    names(average_binned)[names(average_binned) == glue('{bin_val}.x')] <- bin_val"
"0","    "
"0","  return(average_binned)"
"0","}"
"0",""
"0","get_mse <- function(y, y_preds){"
"0","  sum((y - y_preds)^2) / length(y)"
"0","}"
"0",""
"0","reg_output <- function(model, binned_df){"
"0","  preds <- predict(model)"
"0","  res <- model$residuals"
"0","  resid <- binned_df$Median_House_Value - preds"
"0","  hist(resid)"
"0","  "
"0","  ggplot(binned_df, aes(x = resid / 1000, y = Median_House_Value / 1000, col = as.factor(class))) + "
"0","    geom_point() + "
"0","    theme_classic() +"
"0","    xlab(""Residual"") + ylab(""Median_House_Value"")"
"0","}"
"0",""
